syntax = "proto3";

package fileserver;

service FileService {
    rpc Authenticate(ConnectRequest) returns (ConnectResponse);
    rpc HealthCheck(Empty) returns (HealthStatus);
    rpc Stat(StatRequest) returns (FileMetadata);
    rpc List(ListRequest) returns (ListResponse);
    rpc Read(ReadRequest) returns (stream DataChunk);
    rpc Write(stream DataChunk) returns (WriteResponse);
    rpc Delete(DeleteRequest) returns (DeleteResponse);
}

message Empty {}

message ConnectRequest {
    string client_id = 1;
}

message ConnectResponse {
    bool success = 1;
    string message = 2;
    repeated string available_directories = 3;
}

message HealthStatus {
    bool healthy = 1;
    int64 uptime_seconds = 2;
    string version = 3;
    string message = 4;
}

message StatRequest {
    string path = 1;
}

message FileMetadata {
    string name = 1;
    uint64 size = 2;
    bool is_directory = 3;
    string permissions = 4;
    int64 modified_time = 5;
    int64 created_time = 6;
}

message ListRequest {
    string path = 1;
}

message ListResponse {
    repeated FileEntry entries = 1;
}

message FileEntry {
    string name = 1;
    bool is_directory = 2;
    uint64 size = 3;
    int64 modified_time = 4;
    string permissions = 5;
}

message ReadRequest {
    string path = 1;
    optional uint64 offset = 2;
    optional uint64 length = 3;
}

message DataChunk {
    string path = 1;
    bytes data = 2;
    uint64 offset = 3;
    bool is_last = 4;
}

message WriteResponse {
    bool success = 1;
    string message = 2;
    uint64 bytes_written = 3;
}

message DeleteRequest {
    string path = 1;
}

message DeleteResponse {
    bool success = 1;
    string message = 2;
}